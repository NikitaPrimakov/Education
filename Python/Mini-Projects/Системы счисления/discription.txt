Система счисления — символический метод записи чисел, то есть представление чисел с помощью письменных знаков.
------------------

- число — некоторая абстрактная сущность, мера для описания количества чего-либо;
- цифра — знак, используемый для записи чисел.

Цифры бывают разные, а самые распространенные — арабские цифры, представляемые знаками от нуля (0) до девяти (9); 
менее распространены римские цифры, их можно встретить на циферблате часов или в обозначении века (XIX век).

Поскольку чисел гораздо больше, чем цифр, для записи числа обычно используется набор цифр. Только для самых малых по 
величине целых чисел достаточно одной цифры.

Существует много способов записи чисел с помощью цифр, называемых системами счисления. Величина числа может зависеть от 
порядка цифр в записи, а может и не зависеть. Все системы счисления можно разделить на 4 основные группы:

унарные;
позиционные;
непозиционные;
смешанные.


Унарные системы счисления
#-------------------------

В древние времена, когда люди начали считать, появилась потребность и записывать числа. Количество предметов 
изображалось черточками или насечками на какой-либо твердой поверхности: камне, дереве, глине. Позже значки стали 
группировать по три или по пять. Такая система записи чисел называется унарной (единичной), так как любое число в ней 
образуется путем повторения одного знака, символизирующего единицу. Отголоски унарной системы счисления встречаются и 
сегодня (счетные палочки для обучения счету; полоски, нашитые на рукаве и обозначающие на каком курсе учится курсант 
военного училища).


Позиционные системы счисления
#-----------------------------

В позиционных системах счисления значение цифры зависит от ее положения — позиции — в числе.

Например, число 15 обозначает пятнадцать, 51 — пятьдесят один.

Позиционные системы счисления позволяют легко производить арифметические расчеты.

Представление чисел с помощью арабских цифр — самая распространенная позиционная система счисления, она называется 
десятичной системой счисления потому, что использует десять цифр: 0,1,2,3,4,5,6,7,8 и 9.

   Запомни: максимальная цифра (9) на единицу меньше количества цифр (10).

Количество цифр, используемое в системе счисления, называется ее основанием. В десятичной системе основание равно десяти, 
в двоичной системе — двум, ну а в восьмеричной и шестнадцатеричной — соответственно, восьми и шестнадцати.

   Запомни: В позиционной системе счисления с основанием p используются цифры от 0 до p−1.


Непозиционные системы счисления
#------------------------------

В непозиционных системах счисления значение цифры не зависит от ее положения — позиции — в записанном числе. Примером 
непозиционной системы счисления является римская система (см. примечание).

Запомни: при использовании непозиционных систем счисления очень сложно выполнять математические расчеты и  необходимо 
большое количество различных знаков для записи чисел, особенно больших.



Смешанные системы счисления
#--------------------------

Смешанные системы счисления — это когда числа, заданные в системе счисления с основанием p изображают с помощью цифр 
другой системы, с основанием q, где q<p. Такая система называется q−p - ичной со старшим основанием p и младшим 
основанием q.

Денежные знаки — пример смешанной системы счисления. Сейчас в России используются монеты и купюры следующих номиналов: 
по 1,2,5,10,50,100,200,500,1000,2000,5000 рублей и по 5,10,50 копеек. Чтобы получить некоторую сумму в рублях, нужно 
использовать некоторое количество денежных знаков различного достоинства.

В данном случае можно сказать, что p=1 руб = 100 копеек – старшее основание и q−p=1 копейка – младшее основание.

Таким образом, у этой системы целый ряд оснований, равный достоинствам денежных знаков, также используется основание 
той системы, с помощью которой производится их счет.



Перевод чисел из любой системы счисления в десятичную
#----------------------------------------------------

Мы пользуемся свернутой формой записи числа, но мы знаем, что, например, десятичное число 352 = 3⋅100 +5⋅10 +2.

В развернутой форме производится умножение цифр числа на степень основания, т.е. 352 = 3⋅10^2 + 5⋅10^1 + 2⋅10^0.

То есть любое число в позиционной системе счисления можно записать в развернутой форме и перевести в десятичную систему 
счисления.

Примеры
Пример 1. Перевести двоичное число 110101
​
  в десятичную систему счисления.

Решение. Пронумеруем разряды двоичного числа справа налево начиная с нуля 1^5 1^4 0^3 1^2 0^1 1^0

Имее: 1^5 1^4 0^3 1^2 0^1 1^0 = 1*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0

В памяти компьютера числа представлены в двоичной системе счисления, поэтому в информатике часто возникает необходимость 
перевода чисел из двоичной системы в десятичную и обратно.

Пример 2. Перевести число из четверичной системы счисления 3211 в десятичную систему счисления.

Решение. Пронумеруем разряды четверичного числа справа налево начиная с нуля 3^3 2^2 1^1 1^0. Имеем

3^3 2^2 1^1 1^0 = 3*4^3 + 2*4^2 + 1*4^1 + 1*4^0

Пример 3. Перевести число из восьмеричной системы счисления 214 в десятичную систему счисления.

Решение. Пронумеруем разряды восьмеричного числа справа налево начиная с нуля 2^2 1^1 4^0. Имеем

2^2 1^1 4^0 = 2*8^2 + 1*8^1 + 4*8^0


# Двоичная, восьмеричная и шестнадцатеричная системы счисления
#-------------------------------------------------------------

В информатике и программировании часто используются двоичная, восьмеричная и шестнадцатеричная системы счисления. В Python встроены три функции bin(), oct(), hex(), которые возвращают строковые 
представления целого десятичного числа в соответствующей системе счисления (2,8,16).

Функция bin()
#------------

Функция bin() возвращает строку с двоичным представлением указанного целого числа.

Следующий программный код: 

print(bin(10))
print(bin(128))
print(bin(150))
print(bin(18765))
выводит:

0b1010
0b10000000
0b10010110
0b100100101001101

Важно: обратите внимание на приставку 0b, которая сигнализирует о том, что число представлено в двоичной системе счисления.


Функция oct()
#------------

Функция oct() возвращает строку с восьмеричным представлением указанного целого числа.

Следующий программный код: 

print(oct(10))
print(oct(128))
print(oct(150))
print(oct(18765))
выводит:

0o12
0o200
0o226
0o44515


Важно: обратите внимание на приставку 0o, которая сигнализирует о том, что число представлено в восьмеричной системе счисления.


Функция hex()
#------------

Функция hex() возвращает строку с шестнадцатеричным представлением указанного целого числа.

Следующий программный код: 

print(hex(10))
print(hex(128))
print(hex(150))
print(hex(18765))
выводит:

0xa
0x80
0x96
0x494d


Важно: обратите внимание на приставку 0x, которая сигнализирует о том, что число представлено в шестнадцатеричной системе счисления.


Примечания
#---------

Примечание 1. Если нам требуется избавиться от приставок 0b, 0o, 0x, то мы можем воспользоваться строковым срезом:

num = 127

bin_num = bin(num)  # 0b1111111
oct_num = oct(num)  # 0o177
hex_num = hex(num)  # 0x7f

print(bin_num[2:])  # 1111111
print(oct_num[2:])  # 177
print(hex_num[2:])  # 7f

Примечание 2. Обратите внимание, что функция hex() возвращает шестнадцатеричное число с маленькими символами a, b, c, d, e, f. Для преобразования к верхнему регистру можно использовать строковый метод 
upper():

num = 127432

hex_num = hex(num)          # 0x1f1c8
print(hex_num[2:].upper())  # 1F1C8