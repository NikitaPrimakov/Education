# Упражнение 1

# Используя списочное выражение, дополните приведённый ниже код так, чтобы получить новый список, 
# содержащий строки исходного списка, где у каждой строки удалён первый символ.

keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 
            'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 
            'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 
            'raise', 'return', 'while', 'yield']

new_keywords = [i[1:] for i in keywords]

print(new_keywords)
#-------------------------------------------------

# Упражнение 2

# Используя списочное выражение, дополните приведённый ниже код так, чтобы получить новый список, 
# содержащий длины строк исходного списка.

keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

lengths = [len(i) for i in keywords]

print(lengths)
#-------------------------------------------------

# Упражнение 3

# Используя списочное выражение, дополните приведённый ниже код так, чтобы получить новый список, 
# содержащий только слова длиной не менее пяти символов (включительно).

keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

new_keywords = [i for i in keywords if len(i) >= 5]

print(new_keywords)
#-------------------------------------------------

# Упражнение 4

# Используя списочное выражение, дополните приведённый ниже код так, чтобы получить список всех 
# чисел-палиндромов от 100 до 1000 (включительно).

# Примечание. Результирующий список должен состоять из целых чисел.


palindromes = [i for i in range(100, 1001) if str(i) == (str(i))[-1::-1]]

print(palindromes)
#-------------------------------------------------

# Упражнение 5


# Списочное выражение 1

# На вход программе подаётся натуральное число n. Напишите программу, использующую списочное выражение, 
# которая создаёт список, содержащий квадраты чисел от 1 до n (включительно), а затем выводит его элементы 
# построчно, то есть каждый на отдельной строке.


quad_of_num = [i**2 for i in range(1, int(input())+1)]
print(*quad_of_num, sep='\n')
#-------------------------------------------------

# Упражнение 6

# Списочное выражение 2

# На вход программе подаётся строка текста, содержащая целые числа. Напишите программу, использующую 
# списочное выражение, которая выведет кубы указанных чисел на одной строке.

# Формат входных данных
# На вход программе подаётся строка текста, содержащая целые числа, разделённые символом пробела.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# Примечание 1. Для вывода элементов списка используйте цикл for.

# Примечание 2. Используйте метод split().

# list_of_num = input().split()
# list_two = []

# for i in range(len(list_of_num)):

#     list_of_num[i] = int(list_of_num[i])
#     list_two.append(list_of_num[i]**3)

# print(list_two)

list_of_num = [i for i in input().split()]

list_two = [int(list_of_num[j])**3 for j in range(len(list_of_num))]

print(*list_two)
#-------------------------------------------------

# Упражнение 7

# В одну строку 1

# На вход программе подаётся строка текста, содержащая слова. Напишите программу, которая выводит слова 
# введённой строки в столбик.

# Формат входных данных
# На вход программе подаётся строка текста, содержащая слова, разделённые символом пробела.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# Примечание. Программу можно написать в одну строку кода.


list_one = [i for i in input().split(' ')]

print(*list_one,sep='\n')
#-------------------------------------------------

# Упражнение 8

# В одну строку 2

# На вход программе подаётся строка текста. Напишите программу, использующую списочное выражение, которая 
# выводит все цифровые символы данной строки.

# Формат входных данных
# На вход программе подаётся строка текста.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# Примечание. Программу можно написать в одну строку кода.


# str_one = input()
# list_one = list()

# for i in range(len(str_one)):

#     if str_one[i] in '1234567890':

#         list_one.append(str_one[i])

# print(*list_one, sep='')

str_one = input()
list_one = [str_one[i] for i in range(len(str_one)) if str_one[i] in '1234567890']
print(*list_one, sep='')


print(*[i for i in input() if i in "0123456789"], sep = "")
#-------------------------------------------------

# Упражнение 9

# В одну строку 3

# На вход программе подаётся строка текста, содержащая целые числа. Напишите программу, использующую 
# списочное выражение, которая выведет квадраты чётных чисел, кроме тех квадратов, которые оканчиваются на 
# цифру 4.

# Формат входных данных
# На вход программе подаётся строка текста, содержащая целые числа, разделённые символом пробела.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# Примечание. Программу можно написать в одну строку кода.

print(*[int(i)**2 for i in input().split() if int(i) % 2 == 0 and int(i)**2 % 10 != 4], sep=" ")