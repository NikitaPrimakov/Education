# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1

# –°–µ—Ä–µ–¥–∏–Ω–∞ –æ—Ç—Ä–µ–∑–∫–∞

# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_middle_point(x1, y1, x2, y2), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ 
# –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–Ω—Ü–æ–≤ –æ—Ç—Ä–µ–∑–∫–∞ (x1,y1) (x2,y2) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ —è–≤–ª—è—é—â–µ–π—Å—è —Å–µ—Ä–µ–¥–∏–Ω–æ–π 
# –¥–∞–Ω–Ω–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞.

def get_middle_point(x_1, y_1, x_2, y_2):

    return (x_1 + x_2)/2, (y_1 + y_2)/2


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
x_1, y_1 = int(input()), int(input())
x_2, y_2 = int(input()), int(input())

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
x, y = get_middle_point(x_1, y_1, x_2, y_2)
print(x, y)
#-------------------------------------------

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2

# –ü–ª–æ—â–∞–¥—å –∏ –¥–ª–∏–Ω–∞ üìè

# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_circle(radius), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ä–∞–¥–∏—É—Å –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ 
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è: –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –¥–∞–Ω–Ω–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å—é.


import math

def get_circle(radius):

    return math.pi * 2 * radius, math.pi * radius**2

radius = float(input())

C, S = get_circle(radius)
print(C, S)
#-------------------------------------------

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3

# –ö–æ—Ä–Ω–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è üå∂Ô∏èüå∂Ô∏è
import math

# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é solve(a, b, c), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ç—Ä–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ a, b, c 
# ‚Äì –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è ax2+bx+c=0 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ—Ä–Ω–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.

def solve(a, b, c):

    print("–ü–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–Ω–µ–π –≤ —É—Ä–∞–≤–Ω–µ–µ–µ")

    D = b ** 2 - 4 * a * c

    if D > 0:
        print("D > 0. –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–æ–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç 2 –∫–æ—Ä–Ω—è")
        print()
        print("–†–µ—à–∏–º –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–æ–≤–Ω–µ–∏–µ –≤–∏–¥–∞: ax2+bx+c=0")

        x_1 = (-b + math.sqrt(D)) / (2 * a)
        x_2 = (-b - math.sqrt(D)) / (2 * a)

        if x_1 > x_2:
            return x_2, x_1
        else:
            return x_1, x_2

    elif D == 0:
        print("D = 0. –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–æ–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –¥–≤–∞ —Ä–∞–≤–Ω—ã—Ö –∫–æ—Ä–Ω—è")
        print()
        print("–†–µ—à–∏–º –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–æ–≤–Ω–µ–∏–µ –≤–∏–¥–∞: ax2+bx+c=0")
        x_1 = -b / (2 * a)
        x_2 = -b / (2 * a)
        return x_1, x_2

    else:
        print("D < 0. –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–æ–≤–Ω–µ–Ω–∏–µ –Ω–µ –∏–º–µ–µ—Ç –∫–æ—Ä–Ω–µ–π")


a, b, c = int(input()), int(input()), int(input())
print(solve(a, b, c))
#-------------------------------------------

# –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4

# –í—ã–≤–æ–¥ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤

def unique(answer_text: str) -> str:

    list_one = []
    answer_split = answer_text.split(' ')
    for i in answer_split:
        count_of_word = answer_split.count(i)
        if count_of_word < 2:
            list_one.append(i)
        else:
            continue
    return list_one
    

answer_text = input()
unique_word = unique(answer_text)
print(*unique_word, sep=' ')