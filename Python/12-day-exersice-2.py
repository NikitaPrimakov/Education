# Пример 1. Требовалось написать программу, которая выводит 10 раз символ А. 
# Вы ревьювите приведённый ниже код:

# print('A')
# print('A')
# print('A')
# print('A')
# print('A')
# print('A')
# print('A')
# print('A')
# print('A')
# print('A')

# Ревью
# ----
for i in range(10):
    print("А")

# Пример 2. Требовалось написать программу, которая должна вывести все числа от 1 до 100, кратные 7. 
# Вы ревьювите приведённый ниже код:

# i = 1
# while i < 101:
#     if i % 7 == 0:
#         print(i)
#         i += 1
# -------------------

# Ревью. Приведённый выше код содержит достаточно распространённую ошибку: неверно поставленный отступ. 
# Поскольку управление циклом while происходит при помощи переменной i, то её необходимо инкрементировать 
# (увеличивать) каждую итерацию. В приведённом выше коде она инкрементируется, только если выполняется условие 
# i % 7 == 0, которое ложно для начального значения i = 1. Таким образом, получаем бесконечный цикл. 
# Для исправления ошибки необходимо удалить отступ у строки i += 1:

# i = 1
# while i < 101:
#     if i % 7 == 0:
#         print(i)
#     i += 1

# В данном случае лучше использовать цикл for с шагом, равным 7. Это позволит сделать код более наглядным 
# и сократит время выполнения программы, так как нет необходимости просматривать и проверять все числа на 
# делимость на 7:

# Ревью
# ----
for i in range(7, 101, 7):
    print(i)

#     или

# for i in range(1,101):
#     if i % 7 == 0:
#         print(i)



# Пример 2.  Требовалось написать программу, которая выводит все числа от 100 до 1 в порядке убывания. 
# Вы ревьювите приведённый ниже код:

# for i in range(1, 100):
#     print(101 - i)

# Ревью
# ----
for i in range(100, 0, -1):
    print(i)

# Пример 4. Требовалось написать программу, которая находит сумму всех нечётных чисел от 1 до 1000 (включительно). 
# Вы ревьювите приведённый ниже код:

# a = 1
# for i in range(1, 1000):
#     if i % 2 == 1:
#         a = a + 1
# print(a)

# Ревью. Приведенный код содержит достаточно распространенные ошибки:

#   - неправильная начальная инициализация переменной a; 
#   - неправильная правая граница цикла for;
#   - неправильно записанная операция накапливания значения суммы.

summ = 0
for i in range(1, 1001):
    
    if i % 2 != 0:
        summ += i
print(summ)

# Но можно лучше:

summ = 0
for i in range(1, 1001, 2):
    summ += i
print(summ)


# Пример 5. Требовалось написать программу, которая вычисляет факториал числа. Вы ревьювите следующий код:

# n = input()
# a = 0
# for i in range(n):
#     a = a * i
# print(a)

# Ревью
# -----

# Приведенный код содержит достаточно распространенные ошибки:

#   - отсутствие преобразования строки текста в целое число;
#   - неправильная начальная инициализация переменной a; 
#   - неправильная работа с границами итерирования: переменная i принимает значения от 0 до n - 1.

n = int(input())

a = 1

for i in range(1, n+1):
    a = a * i
print(a)

# Для улучшения читабельности кода, изменим название переменной a на factorial и используем расширенный 
# оператор присваивания:

n = int(input())
factorial = 1
for i in range(1, n + 1):
    factorial *= i
print(factorial)

# В модуле math есть функция factorial(), которая вычисляет факториал числа. 
# Поэтому вместо реализации своей версии куда правильнее и удобнее воспользоваться уже готовой.